{"version":3,"sources":["app/core/apis/api.js","app/base/components/Notification.js","app/base/components/ModalConfirmDelete/ModalConfirmDelete.js","app/base/components/Editor/EditorToolbar.js","app/core/apis/topic.js","app/core/apis/question.js","app/base/components/Editor/Editor.js","app/features/QuestionPage/ModalAddNewQuestion/ModalNewQuestion.js","app/features/QuestionPage/TablesQuestion/TablesQuestion.js","app/features/QuestionPage/QuestionPage.js"],"names":["instance","axios","create","baseURL","configuration","ApiUrl","timeout","headers","interceptors","request","use","config","ApiRequestToken","getAPIRequestToken","Authorization","access","token","error","Promise","reject","response","code","status","a","post","refreshToken","refresh","data","setApiRequestToken","_post","action","_get","params","get","_put","put","_delete","delete","openNotificationWithIcon","type","message","description","notification","ModalConfirmDelete","show","handleClose","handleSubmit","title","body","onHide","className","Header","closeButton","Title","Body","style","whiteSpace","fontSize","Footer","variant","onClick","CustomUndo","viewBox","points","d","CustomRedo","Size","Quill","import","whitelist","register","Font","modules","toolbar","container","handlers","undo","this","quill","history","redo","delay","maxStack","userOnly","formats","QuillToolbar","id","defaultValue","value","getAllTopic","getTopicById","addNewTopic","editTopic","deleteTopic","_id","getAllQuestions","getQuestionById","addNewQuestion","addNewQuestionWithExam","editQuestion","deleteQuestion","Editor","props","EditorToolbar","theme","Option","Select","ModalAddNewQuestion","item","setItem","fetchQuestionList","useState","topic","setTopic","selectedTopicID","setSelectedTopicID","question","setQuestion","explanation","setExplanation","useEffect","handleAddNewQuestion","e","preventDefault","tempItem","choices","answer","undefined","map","item1","index","label","target","trim","checked","find","t","push","Modal","Form","noValidate","onSubmit","Row","Col","lg","Group","as","controlId","Label","state","setState","placeholder","InputGroup","Control","onChange","rows","Check","inline","defaultChecked","name","width","Button","TablesQuestion","handleShow","React","Card","border","height","QuestionPage","setData","setShow","modalConfirmDelete","useSelector","confirmDelete","dispatch","useDispatch","currentQuestion","setCurrentQuestion","itemChooseDelete","setItemChooseDelete","updateModalInfo","handleDeleteQuestion","toggleShowModal","alert","deleteUser","useCallback","Breadcrumb","listProps","Item","icon","faHome","active","Routes","faPlus"],"mappings":"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","file":"static/js/19.e140ec79.chunk.js","sourcesContent":["import axios from \"axios\";\nimport configuration from \"../../../configuration\";\n\nexport const instance = axios.create({\n  baseURL: configuration.ApiUrl,\n  timeout: 30 * 1000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\ninstance.interceptors.request.use(\n  function (config) {\n    const ApiRequestToken  = configuration.getAPIRequestToken();\n\n    if (ApiRequestToken) {\n      config.headers.Authorization = `${ApiRequestToken?.access?.token}`;\n      return config;\n    }\n    return config;\n  },\n  function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\ninstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const code = error.response.status;\n    const config = error.response.config;\n\n    if (code === 401) {\n      (async () => {\n        const ApiRequestToken  = configuration.getAPIRequestToken();\n        const data = await instance.post(`/api/v1/user/refresh`, {\n          refreshToken: ApiRequestToken?.refresh?.token,\n        });\n\n        if (data?.data) {\n          if (!data?.data?.token) {\n            configuration.setApiRequestToken(\"\");\n            // window.location.href = \"/login\";\n            return;\n          }\n\n          configuration.setApiRequestToken(data?.data?.token);\n\n          config.headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: `${data?.data?.token?.access?.token}`,\n          };\n          config.baseURL = configuration.ApiUrl;\n          config.timeout = 30 * 1000;\n\n          return instance(config);\n        }\n      })();\n    }\n    else\n    {\n      // window.location = `http:/localhost:3000/${code}`\n    }\n\n    return error.response;\n  }\n);\n\nexport const _post = (action, data) => {\n  return instance.post(action, data);\n};\n\nexport const _get = (action, params) => {\n  return instance.get(`${action}`, { params });\n};\n\nexport const _put = (action, params) => {\n  return instance.put(`${action}`, params);\n};\n\nexport const _patch = (action, params) => {\n  return instance.patch(`${action}`, params);\n};\n\nexport const _delete = (action, params) => {\n  return instance.delete(`${action}`, { params });\n};\n","import { notification } from 'antd';\r\n\r\nexport const openNotificationWithIcon = (type, message, description='') => {\r\n  notification[type]({\r\n    message: message,\r\n    description: description,\r\n  });\r\n};","import React from 'react';\r\nimport { Modal, Button, Form } from \"@themesberg/react-bootstrap\";\r\nimport './ModalConfirmDelete.css'\r\n\r\nconst ModalConfirmDelete = ({ show, handleClose, handleSubmit, title, body }) => {\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose} className='modal-question'>\r\n                <Form>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <pre style={{whiteSpace: 'pre-line', fontSize: '20px'}}>\r\n                            {body}\r\n                        </pre>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalConfirmDelete;","import React from \"react\";\r\nimport { Quill } from \"react-quill\";\r\n\r\n// Custom Undo button icon component for Quill editor. You can import it directly\r\n// from 'quill/assets/icons/undo.svg' but I found that a number of loaders do not\r\n// handle them correctly\r\nconst CustomUndo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Redo button icon component for Quill editor\r\nconst CustomRedo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Undo and redo functions for Custom Toolbar\r\nfunction undoChange() {\r\n  this.quill.history.undo();\r\n}\r\nfunction redoChange() {\r\n  this.quill.history.redo();\r\n}\r\n\r\n// Add sizes to whitelist and register them\r\nconst Size = Quill.import(\"formats/size\");\r\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\r\nQuill.register(Size, true);\r\n\r\n// Add fonts to whitelist and register them\r\nconst Font = Quill.import(\"formats/font\");\r\nFont.whitelist = [\r\n  \"arial\",\r\n  \"comic-sans\",\r\n  \"courier-new\",\r\n  \"georgia\",\r\n  \"helvetica\",\r\n  \"lucida\",\r\n];\r\nQuill.register(Font, true);\r\n\r\n// Modules object for setting up the Quill editor\r\nexport const modules = {\r\n  toolbar: {\r\n    container: \"#toolbar\",\r\n    handlers: {\r\n      undo: undoChange,\r\n      redo: redoChange,\r\n    },\r\n  },\r\n  history: {\r\n    delay: 500,\r\n    maxStack: 100,\r\n    userOnly: true,\r\n  },\r\n};\r\n\r\n// Formats objects for setting up the Quill editor\r\nexport const formats = [\r\n  \"header\",\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"align\",\r\n  \"strike\",\r\n  \"script\",\r\n  \"blockquote\",\r\n  \"background\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"video\",\r\n  \"color\",\r\n  \"code-block\",\r\n];\r\n\r\n// Quill Toolbar component\r\nexport const QuillToolbar = () => (\r\n  <div id=\"toolbar\">\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-font\" defaultValue=\"arial\">\r\n        <option value=\"arial\">Arial</option>\r\n        <option value=\"comic-sans\">Comic Sans</option>\r\n        <option value=\"courier-new\">Courier New</option>\r\n        <option value=\"georgia\">Georgia</option>\r\n        <option value=\"helvetica\">Helvetica</option>\r\n        <option value=\"lucida\">Lucida</option>\r\n      </select>\r\n      <select className=\"ql-size\" defaultValue=\"medium\">\r\n        <option value=\"extra-small\">Size 1</option>\r\n        <option value=\"small\">Size 2</option>\r\n        <option value=\"medium\">Size 3</option>\r\n        <option value=\"large\">Size 4</option>\r\n      </select>\r\n      <select className=\"ql-header\" defaultValue=\"3\">\r\n        <option value=\"1\">Heading</option>\r\n        <option value=\"2\">Subheading</option>\r\n        <option value=\"3\">Normal</option>\r\n      </select>\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-bold\" />\r\n      <button className=\"ql-italic\" />\r\n      <button className=\"ql-underline\" />\r\n      <button className=\"ql-strike\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-list\" value=\"ordered\" />\r\n      <button className=\"ql-list\" value=\"bullet\" />\r\n      <button className=\"ql-indent\" value=\"-1\" />\r\n      <button className=\"ql-indent\" value=\"+1\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-script\" value=\"super\" />\r\n      <button className=\"ql-script\" value=\"sub\" />\r\n      <button className=\"ql-blockquote\" />\r\n      <button className=\"ql-direction\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-align\" />\r\n      <select className=\"ql-color\" />\r\n      <select className=\"ql-background\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-link\" />\r\n      <button className=\"ql-image\" />\r\n      <button className=\"ql-video\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-formula\" />\r\n      <button className=\"ql-code-block\" />\r\n      <button className=\"ql-clean\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-undo\">\r\n        <CustomUndo />\r\n      </button>\r\n      <button className=\"ql-redo\">\r\n        <CustomRedo />\r\n      </button>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default QuillToolbar;\r\n","import { _get, _post, _put, instance } from \"./api\";\r\n\r\n// APIS\r\nexport const getAllTopic = () => {\r\n  return _get(\"/api/v1/topic/list\");\r\n};\r\n\r\nexport const getTopicById = (id) => {\r\n  return _get(`/api/v1/topic?_id=${id}`);\r\n};\r\n\r\nexport const addNewTopic = (data) => {\r\n  return _post(\"/api/v1/topic\", data);\r\n};\r\n\r\nexport const editTopic = (data) => {\r\n  return _put(\"/api/v1/topic\", data);\r\n};\r\n\r\nexport const deleteTopic = (data) => {\r\n  return instance.delete(`/api/v1/topic?_id=${data._id}`);\r\n};\r\n\r\nexport const getTopicSectionByNonId = (id) => {\r\n  if (id === undefined) {\r\n    return _get(`/api/v1/topic/section/by-id`);\r\n  }\r\n  return _get(`/api/v1/topic/section/by-id?topicId=${id}`);\r\n};\r\n","import { _get, _post, _delete, _put, instance } from \"./api\";\r\n\r\n// APIS\r\nexport const getAllQuestions = () => {\r\n  return _get(\"/api/v1/question/list\");\r\n};\r\n\r\nexport const getQuestionById = (id) => {\r\n  return _get(`/api/v1/question?_id=${id}`);\r\n};\r\n\r\nexport const addNewQuestion = (data) => {\r\n  return _post(\"/api/v1/question\", data);\r\n};\r\n\r\nexport const addNewQuestionWithExam = (data) => {\r\n  return _post(\"/api/v1/question/with-exam\", data);\r\n};\r\n\r\nexport const editQuestion = (data) => {\r\n  return _put(\"/api/v1/question\", data);\r\n};\r\n\r\nexport const deleteQuestion = (data) => {\r\n  return instance.delete(`/api/v1/question?_id=${data._id}`);\r\n};\r\n","import React from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport \"./styles.css\";\r\n\r\nexport const Editor = (props) => {\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        theme=\"snow\"\r\n        {...props}\r\n        value={props.value || \"\"}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  Modal,\r\n  Row,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport { addNewQuestion, editQuestion } from \"app/core/apis/question\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { openNotificationWithIcon } from \"app/base/components/Notification\";\r\nimport { getAllTopic } from \"app/core/apis/topic\";\r\nimport { Select } from \"antd\";\r\nimport Editor from \"app/base/components/Editor/Editor\";\r\nimport \"./ModalNewQuestion.css\";\r\nconst { Option } = Select;\r\n\r\nconst ModalAddNewQuestion = ({\r\n  show,\r\n  handleClose,\r\n  item,\r\n  setItem,\r\n  fetchQuestionList,\r\n}) => {\r\n  const [topic, setTopic] = useState([]);\r\n  const [selectedTopicID, setSelectedTopicID] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [explanation, setExplanation] = useState(\"\");\r\n  useEffect(() => {\r\n    if (item !== \"\") {\r\n      setQuestion(item.question);\r\n      setExplanation(item.explanation);\r\n    } else {\r\n      setQuestion(\"\");\r\n      setExplanation(\"\");\r\n    }\r\n  }, [item]);\r\n\r\n  const handleAddNewQuestion = async (e) => {\r\n    e.preventDefault();\r\n    const tempItem = item;\r\n    setItem(\"\");\r\n    const type = \"single_choice\";\r\n    let choices = [];\r\n    let answer = \"\";\r\n\r\n    if (tempItem?.question !== undefined) {\r\n      try {\r\n        choices = tempItem.choices;\r\n        choices = choices.map((item1, index) => {\r\n          return {\r\n            ...item1,\r\n            label: e.target[`choices${index}`].value.trim(),\r\n          };\r\n        });\r\n\r\n        if (e.target.answer[0].checked) {\r\n          answer = {\r\n            _id: choices[0]._id,\r\n          };\r\n        } else if (e.target.answer[1].checked) {\r\n          answer = {\r\n            _id: choices[1]._id,\r\n          };\r\n        } else if (e.target.answer[2].checked) {\r\n          answer = {\r\n            _id: choices[2]._id,\r\n          };\r\n        } else {\r\n          answer = {\r\n            _id: choices[3]._id,\r\n          };\r\n        }\r\n\r\n        const response = await editQuestion({\r\n          ...tempItem,\r\n          question: question,\r\n          explanation: explanation,\r\n          type: type,\r\n          choices: choices,\r\n          answer: answer,\r\n          topic: topic?.find((t) => t.title === selectedTopicID)._id,\r\n        });\r\n        if (response.status === 201) {\r\n          await fetchQuestionList();\r\n          handleClose();\r\n          openNotificationWithIcon(\r\n            \"success\",\r\n            \"A new question has been updated\"\r\n          );\r\n        }\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        for (let index = 0; index < 4; index++) {\r\n          choices.push({\r\n            _id: index,\r\n            label: e.target[`choices${index}`].value.trim(),\r\n          });\r\n        }\r\n\r\n        if (e.target.answer[0].checked) {\r\n          answer = {\r\n            _id: 0,\r\n          };\r\n        } else if (e.target.answer[1].checked) {\r\n          answer = {\r\n            _id: 1,\r\n          };\r\n        } else if (e.target.answer[2].checked) {\r\n          answer = {\r\n            _id: 2,\r\n          };\r\n        } else {\r\n          answer = {\r\n            _id: 3,\r\n          };\r\n        }\r\n        const response = await addNewQuestion({\r\n          question: question,\r\n          explanation: explanation,\r\n          type: type,\r\n          choices: choices,\r\n          answer: answer,\r\n          topic: topic?.find((t) => t.title === selectedTopicID)._id,\r\n        });\r\n\r\n        if (response.status === 201) {\r\n          await fetchQuestionList();\r\n          handleClose();\r\n          openNotificationWithIcon(\r\n            \"success\",\r\n            \"A new question has been created\"\r\n          );\r\n        }\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    setSelectedTopicID(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await getAllTopic();\r\n        setTopic(response?.data?.topic);\r\n      } catch (error) {}\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={async () => {\r\n          await setItem(\"\");\r\n          handleClose();\r\n        }}\r\n        className=\"modal-question\"\r\n      >\r\n        <Form noValidate onSubmit={handleAddNewQuestion}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add New Question</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col lg={8}>\r\n                <Form.Group\r\n                  className={\"form-group mb-3\"}\r\n                  as={Col}\r\n                  controlId=\"formTitle\"\r\n                >\r\n                  <Form.Label>Question</Form.Label>\r\n                  <Editor\r\n                    state={question}\r\n                    setState={setQuestion}\r\n                    placeholder=\"Enter question\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group\r\n                  className={\"form-group error mb-3\"}\r\n                  controlId=\"formDescription\"\r\n                >\r\n                  <Form.Label>Explanation(Optional)</Form.Label>\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      value={explanation}\r\n                      onChange={(e) => setExplanation(e.target.value)}\r\n                      rows={3}\r\n                      placeholder=\"Enter explanation\"\r\n                    />\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Label>Answer</Form.Label>\r\n                <Form.Group className=\"mb-3 d-flex\" controlId=\"formDescription\">\r\n                  <Form.Check\r\n                    inline\r\n                    defaultChecked={\r\n                      item?.choices !== undefined &&\r\n                      item?.choices[0]._id === item?.answer\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    name=\"answer\"\r\n                    type=\"radio\"\r\n                    id={`inline-1`}\r\n                  />\r\n                  <Form.Control\r\n                    defaultValue={\r\n                      item?.choices !== undefined ? item.choices[0].label : \"\"\r\n                    }\r\n                    as=\"textarea\"\r\n                    name=\"choices0\"\r\n                    rows={2}\r\n                    placeholder=\"Answer A\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 d-flex\" controlId=\"formDescription\">\r\n                  <Form.Check\r\n                    inline\r\n                    defaultChecked={\r\n                      item?.choices !== undefined &&\r\n                      item?.choices[1]._id === item?.answer\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    name=\"answer\"\r\n                    type=\"radio\"\r\n                    id={`inline-2`}\r\n                  />\r\n                  <Form.Control\r\n                    defaultValue={\r\n                      item?.choices !== undefined ? item.choices[1].label : \"\"\r\n                    }\r\n                    as=\"textarea\"\r\n                    name=\"choices1\"\r\n                    rows={2}\r\n                    placeholder=\"Answer B\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 d-flex\" controlId=\"formDescription\">\r\n                  <Form.Check\r\n                    inline\r\n                    defaultChecked={\r\n                      item?.choices !== undefined &&\r\n                      item?.choices[2]._id === item?.answer\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    name=\"answer\"\r\n                    type=\"radio\"\r\n                    id={`inline-3`}\r\n                  />\r\n                  <Form.Control\r\n                    defaultValue={\r\n                      item?.choices !== undefined ? item.choices[2].label : \"\"\r\n                    }\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    name=\"choices2\"\r\n                    placeholder=\"Answer C\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 d-flex\" controlId=\"formDescription\">\r\n                  <Form.Check\r\n                    inline\r\n                    defaultChecked={\r\n                      item?.choices !== undefined &&\r\n                      item?.choices[3]._id === item?.answer\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    name=\"answer\"\r\n                    type=\"radio\"\r\n                    id={`inline-4`}\r\n                  />\r\n                  <Form.Control\r\n                    defaultValue={\r\n                      item?.choices !== undefined ? item.choices[3].label : \"\"\r\n                    }\r\n                    as=\"textarea\"\r\n                    name=\"choices3\"\r\n                    rows={2}\r\n                    placeholder=\"Answer D\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={4}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formDescription\">\r\n                  <Form.Label>Topic</Form.Label>\r\n                  <Select\r\n                    style={{ width: \"300px\" }}\r\n                    defaultValue={\r\n                      item !== \"\" &&\r\n                      topic?.find((t) => t._id === item.topic)?.title\r\n                    }\r\n                    onChange={handleChange}\r\n                  >\r\n                    {topic?.map((t) => (\r\n                      <Option key={t._id} value={t.title}>\r\n                        {t.title}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={async () => {\r\n                await setItem(\"\");\r\n                handleClose();\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalAddNewQuestion;\r\n","import React from \"react\";\r\nimport { Card } from \"@themesberg/react-bootstrap\";\r\nimport \"./TableQuestion.css\";\r\n\r\nexport const TablesQuestion = ({ data, title, handleShow }) => {\r\n  const [pageSize, setPageSize] = React.useState(10);\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n      <Card.Body className=\"pt-0\">\r\n        <div style={{ height: 632, width: \"100%\" }}>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TablesQuestion;\r\n","import {\r\n    faHome,\r\n    faPlus\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Breadcrumb, Button } from \"@themesberg/react-bootstrap\";\r\nimport ModalConfirmDelete from \"app/base/components/ModalConfirmDelete/ModalConfirmDelete\";\r\nimport { openNotificationWithIcon } from \"app/base/components/Notification\";\r\nimport {\r\n    deleteQuestion,\r\n    getAllQuestions,\r\n    getQuestionById\r\n} from \"app/core/apis/question\";\r\n//data\r\nimport { Routes } from \"app/routes\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\n//components\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleShowModal, updateModalInfo } from \"store/confirmDeleteReducer\";\r\nimport ModalAddNewQuestion from \"./ModalAddNewQuestion/ModalNewQuestion\";\r\nimport TablesQuestion from \"./TablesQuestion/TablesQuestion\";\r\n\r\nconst QuestionPage = () => {\r\n  const [data, setData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const modalConfirmDelete = useSelector((state) => state.confirmDelete);\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\r\n  const [itemChooseDelete, setItemChooseDelete] = useState(\"\");\r\n\r\n  dispatch(\r\n    updateModalInfo({\r\n      title: \"Confirm delete this question\",\r\n      body: `Are you sure to delete this question ?\r\n            This question in exam which contains this will be remove.\r\n            This modified changes will not saved and you can't rollback`,\r\n    })\r\n  );\r\n\r\n  const handleDeleteQuestion = async () => {\r\n    try {\r\n      const response = await deleteQuestion({\r\n        _id: itemChooseDelete,\r\n      });\r\n      if (response.status === 200) {\r\n        await fetchQuestionList();\r\n        dispatch(toggleShowModal({ show: false }));\r\n        openNotificationWithIcon(\"success\", \"Delete question successfully\");\r\n      }\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const deleteUser = useCallback(\r\n    (id) => () => {\r\n      setItemChooseDelete(id);\r\n      dispatch(toggleShowModal({ show: true }));\r\n    },\r\n    [data]\r\n  );\r\n\r\n  const editQuestion = useCallback(\r\n    (id) => () => {\r\n      (async () => {\r\n        try {\r\n          const response = await getQuestionById(id);\r\n          if (response.status === 200) {\r\n            setCurrentQuestion(response.data?.question[0]);\r\n            handleShow();\r\n          }\r\n        } catch (error) {\r\n          alert(error);\r\n        }\r\n      })();\r\n    },\r\n    []\r\n  );\r\n\r\n  const columns = [];\r\n\r\n  const fetchQuestionList = async () => {\r\n    try {\r\n      const response = await getAllQuestions();\r\n      if (response.status === 200) {\r\n        setData(\r\n          response?.data?.question.map((item) => {\r\n            return {\r\n              ...item,\r\n              explanation: undefined,\r\n              choices: undefined,\r\n              id: item._id,\r\n              _id: undefined,\r\n            };\r\n          })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchQuestionList();\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentQuestion !== \"\") {\r\n      handleShow();\r\n    }\r\n  }, [currentQuestion]);\r\n\r\n  return (\r\n    <>\r\n      <ModalAddNewQuestion\r\n        fetchQuestionList={fetchQuestionList}\r\n        show={show}\r\n        handleClose={handleClose}\r\n        item={currentQuestion}\r\n        setItem={setCurrentQuestion}\r\n      />\r\n      <ModalConfirmDelete\r\n        handleSubmit={handleDeleteQuestion}\r\n        handleClose={() => dispatch(toggleShowModal({ show: false }))}\r\n        {...modalConfirmDelete}\r\n      />\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Breadcrumb\r\n            className=\"d-none d-md-inline-block\"\r\n            listProps={{ className: \"breadcrumb-dark breadcrumb-transparent\" }}\r\n          >\r\n            <Breadcrumb.Item>\r\n              <FontAwesomeIcon icon={faHome} />\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item active>{Routes.QuestionPage.name}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <h4>{Routes.QuestionPage.name}</h4>\r\n          <p className=\"mb-0\">\r\n            Below tables will shown all of course in your website and some\r\n            information about them.\r\n          </p>\r\n        </div>\r\n        <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n          <Button className=\"mx-2\" onClick={handleShow}>\r\n            <FontAwesomeIcon icon={faPlus} className=\"me-2\" />\r\n            New Question\r\n          </Button>\r\n          {/* <ButtonGroup>\r\n                        <Button variant=\"outline-primary\" size=\"sm\">\r\n                            Share\r\n                        </Button>\r\n                        <Button variant=\"outline-primary\" size=\"sm\">\r\n                            Export\r\n                        </Button>\r\n                    </ButtonGroup> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table-settings mb-4\">\r\n        <TablesQuestion\r\n          title={columns}\r\n          deleteUser={deleteUser}\r\n          data={data}\r\n          handleShow={handleShow}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionPage;\r\n"],"sourceRoot":""}