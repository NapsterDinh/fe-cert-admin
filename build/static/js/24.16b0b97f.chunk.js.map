{"version":3,"sources":["app/core/apis/api.js","app/core/apis/user.js","app/features/basic/Login.js"],"names":["instance","axios","create","baseURL","configuration","ApiUrl","timeout","headers","interceptors","request","use","config","ApiRequestToken","getAPIRequestToken","Authorization","access","token","error","Promise","reject","response","code","status","a","post","refreshToken","refresh","data","setApiRequestToken","_post","action","_get","params","get","_put","put","_delete","delete","getAllUsers","login","toggleBlockUserAPI","schema","Yup","shape","username","required","min","password","LoginPage","dispatch","useDispatch","history","useHistory","location","useLocation","useState","setError","SignIn","values","resetForm","email","result","user","role","name","tokens","updateUser","undefined","state","push","from","search","message","className","Link","as","to","Routes","DashboardPage","path","icon","faAngleLeft","style","backgroundImage","xs","initialValues","validationSchema","onSubmit","setSubmitting","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","noValidate","color","Group","id","Label","Text","faEnvelope","Control","autoFocus","type","placeholder","value","onChange","onBlur","component","faUnlockAlt","maxLength","variant","disabled"],"mappings":"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","file":"static/js/24.16b0b97f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport configuration from \"../../../configuration\";\n\nexport const instance = axios.create({\n  baseURL: configuration.ApiUrl,\n  timeout: 30 * 1000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\ninstance.interceptors.request.use(\n  function (config) {\n    const ApiRequestToken  = configuration.getAPIRequestToken();\n\n    if (ApiRequestToken) {\n      config.headers.Authorization = `${ApiRequestToken?.access?.token}`;\n      return config;\n    }\n    return config;\n  },\n  function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\ninstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const code = error.response.status;\n    const config = error.response.config;\n\n    if (code === 401) {\n      (async () => {\n        const ApiRequestToken  = configuration.getAPIRequestToken();\n        const data = await instance.post(`/api/v1/user/refresh`, {\n          refreshToken: ApiRequestToken?.refresh?.token,\n        });\n\n        if (data?.data) {\n          if (!data?.data?.token) {\n            configuration.setApiRequestToken(\"\");\n            // window.location.href = \"/login\";\n            return;\n          }\n\n          configuration.setApiRequestToken(data?.data?.token);\n\n          config.headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: `${data?.data?.token?.access?.token}`,\n          };\n          config.baseURL = configuration.ApiUrl;\n          config.timeout = 30 * 1000;\n\n          return instance(config);\n        }\n      })();\n    }\n    else\n    {\n      // window.location = `http:/localhost:3000/${code}`\n    }\n\n    return error.response;\n  }\n);\n\nexport const _post = (action, data) => {\n  return instance.post(action, data);\n};\n\nexport const _get = (action, params) => {\n  return instance.get(`${action}`, { params });\n};\n\nexport const _put = (action, params) => {\n  return instance.put(`${action}`, params);\n};\n\nexport const _patch = (action, params) => {\n  return instance.patch(`${action}`, params);\n};\n\nexport const _delete = (action, params) => {\n  return instance.delete(`${action}`, { params });\n};\n","import { _get, _post, _delete, _put } from \"./api\";\n\n// APIS\nexport const getAllUsers = (data) => {\n  return _get(\"/api/v1/user\");\n};\n\nexport const login = (data) => {\n  return _post(\"/api/v1/user/login\", data);\n};\n\nexport const register = (data) => {\n  return _post(\"/api/v1/user/register\", data);\n};\n\nexport const logout = (data) => {\n  return _post(\"/api/v1/user/logout\", data);\n};\n\nexport const deleteUser = (data) => {\n  return _delete(\"/api/v1/user\");\n};\n\nexport const toggleBlockUserAPI = (data) => {\n  return _post(\"/api/v1/user/update-status\", data);\n};\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faEnvelope,\r\n  faUnlockAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Card,\r\n  Button,\r\n  FormCheck,\r\n  Container,\r\n  InputGroup,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Routes } from \"app/routes\";\r\nimport { ErrorMessage, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { login } from \"app/core/apis/user\";\r\nimport { updateUser } from \"store/userReducer\";\r\nimport configuration from \"configuration\";\r\nimport { message } from \"antd\";\r\n\r\nconst schema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required(\"Username is required\")\r\n    .min(8, \"Username muse be at least 6 characters\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const SignIn = async (values, resetForm) => {\r\n    const result = await login({\r\n      email: values.username,\r\n      password: values.password,\r\n    });\r\n\r\n    if (result.status === 200) {\r\n      //set token\r\n      if (result.data?.user?.user?.role?.name !== \"admin\") {\r\n        setError(\"You has no permission to access to this page\");\r\n      } else {\r\n        //set token\r\n        configuration.setApiRequestToken(result.data.tokens);\r\n        dispatch(updateUser(result.data?.user));\r\n        if (location?.state !== undefined) {\r\n          history.push(`${location.state.from}${location.state.search}`);\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } else {\r\n      setError(result?.data?.message);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <p className=\"text-center\">\r\n            <Card.Link\r\n              as={Link}\r\n              to={Routes.DashboardPage.path}\r\n              className=\"text-gray-700\"\r\n            >\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to\r\n              homepage\r\n            </Card.Link>\r\n          </p>\r\n          <Row\r\n            className=\"justify-content-center form-bg-image\"\r\n            style={{ backgroundImage: `url(${\"adadad\"})` }}\r\n          >\r\n            <Col\r\n              xs={12}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0\">Sign in to our platform</h3>\r\n                </div>\r\n                <Formik\r\n                  initialValues={{ username: \"\", password: \"\" }}\r\n                  validationSchema={schema}\r\n                  onSubmit={(values, { setSubmitting, resetForm }) =>\r\n                    SignIn(values, resetForm)\r\n                  }\r\n                >\r\n                  {(props) => {\r\n                    const {\r\n                      values,\r\n                      touched,\r\n                      errors,\r\n                      isSubmitting,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                    } = props;\r\n\r\n                    return (\r\n                      <Form\r\n                        className=\"mt-4 basic-form\"\r\n                        noValidate\r\n                        onSubmit={handleSubmit}\r\n                      >\r\n                        <div className=\"d-flex justify-content-center\">\r\n                          <span style={{ color: \"red\" }}>{error}</span>\r\n                        </div>\r\n                        <Form.Group id=\"username\" className=\"\">\r\n                          <Form.Label>Your Username</Form.Label>\r\n                          <InputGroup\r\n                            className={\r\n                              errors.username && touched.username && \"error\"\r\n                            }\r\n                          >\r\n                            <InputGroup.Text>\r\n                              <FontAwesomeIcon icon={faEnvelope} />\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                              autoFocus\r\n                              type=\"text\"\r\n                              placeholder=\"Username\"\r\n                              value={values.username}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              className={\r\n                                errors.username && touched.username && \"error\"\r\n                              }\r\n                              name=\"username\"\r\n                            />\r\n                          </InputGroup>\r\n                          <ErrorMessage\r\n                            name=\"username\"\r\n                            component=\"div\"\r\n                            className=\"invalid-feedback\"\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Form.Group id=\"password\" className=\"mb-4\">\r\n                            <Form.Label>Your Password</Form.Label>\r\n                            <InputGroup\r\n                              className={\r\n                                errors.password && touched.password && \"error\"\r\n                              }\r\n                            >\r\n                              <InputGroup.Text>\r\n                                <FontAwesomeIcon icon={faUnlockAlt} />\r\n                              </InputGroup.Text>\r\n                              <Form.Control\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={\r\n                                  errors.password && touched.password && \"error\"\r\n                                }\r\n                                maxLength={16}\r\n                              />\r\n                            </InputGroup>\r\n                            <ErrorMessage\r\n                              name=\"password\"\r\n                              component=\"div\"\r\n                              className=\"invalid-feedback\"\r\n                            />\r\n                          </Form.Group>\r\n                        </Form.Group>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"w-100\"\r\n                          disabled={isSubmitting}\r\n                        >\r\n                          Sign in\r\n                        </Button>\r\n                      </Form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}